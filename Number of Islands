public class Solution {
    public int numIslands(char[][] grid) {
		if(grid==null||grid.length==0) return 0;
		int m=grid.length, n=grid[0].length;
		boolean[][] visited = new boolean[m][n];  
		int count = 0;     
		for(int i=0; i<m; i++)
		{
			for(int j=0; j<n; j++)
			{
				if(grid[i][j]=='1')
				{
					findIsland(grid, i, j);
					count++;
				}
					
			}
		} 
		return count;
	}

	public void findIsland(char[][] grid, int i, int j){
		if(grid[i][j]=='1') grid[i][j]='*';
		else return;
		int m=grid.length, n=grid[0].length;
		if(i+1<m) findIsland(grid, i+1, j);
		if(i-1>=0) findIsland(grid,i-1, j);
		if(j+1<n) findIsland(grid, i, j+1);
		if(j-1>=0) findIsland(grid,i, j-1);
	}
}
