
        int m = dungeon.length, n = dungeon[0].length;
    	int[][] dp = new int[m][n]; //represent the min health when enter the position
    	//caculate the last column
    	dp[m-1][n-1] = Math.max(1, 1-dungeon[m-1][n-1]);
    	for(int i=m-2; i>=0; i--)
    	{
    	    dp[i][n-1] = Math.max(1, dp[i+1][n-1]-dungeon[i][n-1]);
    	}
    	//caculate the last row
    	for(int j=n-2; j>=0; j--)
    	{
    	    dp[m-1][j] = Math.max(1, dp[m-1][j+1]-dungeon[m-1][j]);
    	}
    	for(int i=m-2; i>=0; i--)
    	{
    	    for(int j=n-2; j>=0; j--)
    	    {
    	        int minNext = Math.min(dp[i+1][j], dp[i][j+1]);
    	        dp[i][j] = Math.max(1, minNext-dungeon[i][j]);
    	    }
    	}
    	return dp[0][0];
    
