public class Solution {
    public int maxProfit(int k, int[] prices) {
        if(k>=prices.length/2)
        {
            int max = 0;
            for(int i=0; i<prices.length-1; i++)
            {
                max += prices[i]<prices[i+1] ? prices[i+1] - prices[i] : 0;
            }
            return max;
        }
        int[][] maxProfit = new int[k+1][prices.length]; //maxProfit[i][j] represents the max profit for k transanctions within the first j days
        for(int i=1; i<=k; i++)
        {
            int balance = maxProfit[i][0] - prices[0]; //if sell stock at j=0, the balance remained
            for(int j=1; j<prices.length; j++)
            {
            	maxProfit[i][j] = Math.max(maxProfit[i][j-1], prices[j]+balance);
                balance = Math.max(balance, maxProfit[i-1][j]-prices[j]);
            }
        }
        return maxProfit[k][prices.length-1];
    }
}
