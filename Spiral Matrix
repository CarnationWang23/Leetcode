public class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new LinkedList<Integer>();
	        if(matrix==null||matrix.length==0) return result;
	        int m=matrix.length, n=matrix[0].length;
	        if(matrix[0].length!=1)
	        {
	        	for(int i=0; i<Math.min(n/2, m/2); i++)
		        {
		        	for(int j=i; j<n-1-i; j++)
		        		result.add(matrix[i][j]);
		        	for(int j=i; j<m-1-i; j++)
		        		result.add(matrix[j][n-1-i]);
		        	for(int j=i; j<n-1-i; j++)
		        		result.add(matrix[m-1-i][n-1-j]);
		        	for(int j=i; j<m-1-i; j++)
		        		result.add(matrix[m-1-j][i]);
		        }
		        if(m%2 == 1)
		        {
		        	for(int i= m/2; i<= n-1-m/2; i++)
		        		result.add(matrix[m/2][i]);
		        }
		        if(n%2 == 1 && m!=n)
		        {
		        	for(int i= n/2; i<= m-1-n/2; i++)
		        		result.add(matrix[i][n/2]);
		        }
	        }
	        else
	        {
	        	for(int i=0; i<m; i++)
	        		result.add(matrix[i][0]);
	        }
	        return result;
    }
}
