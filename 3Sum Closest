public class Solution {
    Integer re;
	public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        re = nums[0]+nums[1]+nums[2];
        for(int i=0; i<nums.length-2; i++)
        {
            twoSum(nums, i+1, nums.length-1, target);
            while(i<nums.length-1&&nums[i]==nums[i+1]) i++;
        }
        return re;
    }

    public void twoSum(int[] nums, int start, int end, int target) {

        int cur = start-1;
        boolean flag = nums[start]+nums[end]>target ? true:false;
        if(Math.abs(target-re)>Math.abs(target-nums[start]-nums[end]-nums[cur]))
            re = nums[start]+nums[end]+nums[cur];
        while(start<end)
        {
            if(nums[start]+nums[end]+nums[cur]==target)
            {
                re = target;
                return;
            }
            else if (nums[start]+nums[end]+nums[cur]>target)
            {
//                if(!flag)
//                {
                    if(Math.abs(target-re)>Math.abs(target-nums[start]-nums[end]-nums[cur]))
                    {
                        re = nums[start]+nums[end]+nums[cur];
                    }  
//                }
                while(end>start+1&&nums[end]==nums[end-1]) end--;
                end--;
            }
            else
            {
//                if(flag)
//                {
                    if(Math.abs(target-re)>Math.abs(target-nums[start]-nums[end]-nums[cur]))
                    {
                        re = nums[start]+nums[end]+nums[cur];
                    }  
//                }
                while(start<end-1&&nums[start]==nums[start+1]) start++;
                start++;
            }
        }
    }
    
}
