public class Solution {
    class comparableNode implements Comparable<comparableNode>{
		int ind;
		int val;
		comparableNode(int index, int value){
			ind = index;
			val = value;
		}

		public int compareTo(comparableNode n)
		{
			if(val<n.val) return -1;
			else if(val==n.val) return 0;
			else return 1;
		}
	}
    public boolean containsNearbyDuplicate(int[] nums, int k) {
    	comparableNode[] nodes = new comparableNode[nums.length];
    	for(int i=0; i<nums.length; i++)
    	{
    		nodes[i] = new comparableNode(i, nums[i]);
    	}
    	Arrays.sort(nodes);
    	for(int i=0; i<nums.length-1; i++)
    	{
    		if(nodes[i].val==nodes[i+1].val&&Math.abs(nodes[i].ind-nodes[i+1].ind)<=k)
    			return true;
    	}
    	return false;
    }
}
