public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
	Arrays.sort(nums);
	List<List<Integer>> re = new LinkedList<List<Integer>>();
	for(int i=0; i<nums.length-2; i++)
	{
		twoSum(nums, i+1, nums.length-1, 0-nums[i], re);
		while(i<nums.length-1&&nums[i]==nums[i+1]) i++;
	}
	return re;
    }

	public void twoSum(int[] nums, int start, int end, int target, List<List<Integer>> re) {
		
		int cur = start-1;
        while(start<end)
        {
            if(nums[start]+nums[end]==target) 
            {
            	List<Integer> tlist = new LinkedList<Integer>();
            	tlist.add(nums[cur]);
            	tlist.add(nums[start]);
            	tlist.add(nums[end]);
            	re.add(tlist);
            	while(start<end-1&&nums[start]==nums[start+1]) start++;
            	while(end>start+1&&nums[end]==nums[end-1]) end--;
            	start++;end--;
            }
            else if (nums[start]+nums[end]>target) 
            {
            	while(end>start+1&&nums[end]==nums[end-1]) end--;
            	end--;
            }
            else 
            {
            	while(start<end-1&&nums[start]==nums[start+1]) start++;
            	start++;
            }
        }
    }
    
}
