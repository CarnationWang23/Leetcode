public class Solution {
    public int minCut(String s){
		if(s==null||s.length()==0) return 0;
		boolean[][] isP = isPalindrome(s);
		int[] min = new int[s.length()];
		min[0]=0;
		for(int i=1; i<s.length(); i++)
		{
			if(isP[0][i]) min[i]=0;
			else min[i]=i;
			for(int j=1; j<=i; j++)
			{
				if(isP[j][i])
				{
					if(min[i]>min[j-1]+1)
						min[i]=min[j-1]+1;
				}
			}
		}
		return min[s.length()-1];
	}
	
	public boolean[][] isPalindrome(String s)
	{
		int n=s.length();
		boolean[][] isP = new boolean[n][n];
		for(int i=n-1; i>=0; i--)
		{
			for(int j=i; j<n; j++)
			{
				if(s.charAt(i)==s.charAt(j)&&(j-i<=2||isP[i+1][j-1]))
					isP[i][j]=true;
			}
		}
		return isP;
	}
}
