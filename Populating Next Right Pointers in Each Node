/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null) return;
	    Deque<TreeLinkNode> queue = new LinkedList<TreeLinkNode>();
	    queue.add(root);
	    while(!queue.isEmpty())
	    {
	    	int count = queue.size();
	    	for(int i=0; i<count-1; i++)
	    	{
	    		TreeLinkNode node1 = queue.pop();
	    		TreeLinkNode node2 = queue.peek();
	    		node1.next = node2;
	    		if(node1.left!=null)
	    			queue.add(node1.left);
	    		if(node1.right!=null)
	    			queue.add(node1.right);
	    	}
	    	TreeLinkNode node = queue.pop();
	    	node.next=null;
	    	if(node.left!=null)
    			queue.add(node.left);
    		if(node.right!=null)
    			queue.add(node.right);
	    }
    }
}
