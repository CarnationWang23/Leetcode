public class Solution {
    public int maxProfit(int[] prices) {
        if(prices==null||prices.length==0||prices.length==1) return 0;
        int start = 0, end = 1;
        int[] f1 = new int[prices.length];
        int[] f2 = new int[prices.length];
        int min=prices[0], max=prices[prices.length-1];
        for(int i=1; i<prices.length; i++)
        {
        	min = Math.min(min, prices[i]);
        	f1[i] = Math.max(prices[i]-min, f1[i-1]);
        }
        for(int i=prices.length-2; i>=0; i--)
        {
        	max = Math.max(max, prices[i]);
        	f2[i] = Math.max(max-prices[i], f2[i+1]);
        }
        int maxValue=f1[0]+f2[0];
        for(int i=1; i<prices.length; i++)
        	maxValue = Math.max(maxValue, f1[i]+f2[i]);
        return maxValue;
    }
}
