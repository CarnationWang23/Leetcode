public class Solution {
    public int candy(int[] ratings) {
        int re = 0, lev = 1, level[] = new int[ratings.length];
        Queue<Integer> queue = new LinkedList<Integer>(), newQueue;
        //find the children on the 1st level
        for(int i=0; i<ratings.length; i++)
        {
            if((i==0||ratings[i-1]>=ratings[i])&&(i==ratings.length-1||ratings[i+1]>=ratings[i]))
            {
                queue.add(i);
                level[i] = lev;
            }
        }
        re += queue.size();
        //find the children on other levels one by one
        while(!queue.isEmpty())
        {
            lev++;
            newQueue = new LinkedList<Integer>();
            while(!queue.isEmpty())
            {
            	int i = queue.poll();
                // the number on the left of ratings[i]
                if(i!=0 && ratings[i-1]>ratings[i])
                {
                    newQueue.add(i-1);
                    re = re - level[i-1] + lev;
                    level[i-1] = lev;
                }
                if(i!=ratings.length-1 && ratings[i+1]>ratings[i]) 
                {
                    newQueue.add(i+1);
                    re = re - level[i+1] + lev;
                    level[i+1] = lev;
                }
            }
            queue = newQueue;
        }
        return re;
    }
}
